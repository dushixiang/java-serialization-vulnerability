package cn.typesafe.jsv;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServletRequest;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

@RestController
@SpringBootApplication
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    /**
     * apache commons-collections 3.1 版本的反序列化漏洞
     *
     * @param request request
     * @return 是否成功
     * @throws Exception 异常
     */
    @PostMapping("/commons-collections-3.1")
    public String commonsCollections3_1(HttpServletRequest request) throws Exception {
        ServletInputStream inputStream = request.getInputStream();
        final StringBuilder sb = new StringBuilder();
        try (BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
            char[] charBuffer = new char[1024];
            int bytesRead;
            while ((bytesRead = bufferedReader.read(charBuffer)) > 0) {
                sb.append(charBuffer, 0, bytesRead);
            }
        }
        // 读取 request body 中的字符串
        final String requestBody = sb.toString();
        // 使用 base64 解码
        final byte[] bytes = Base64.getDecoder().decode(requestBody.getBytes(StandardCharsets.UTF_8));

        // 将字节数组反序列化为对象
        ByteArrayInputStream b = new ByteArrayInputStream(bytes);
        try (ObjectInputStream input = new ObjectInputStream(b)) {
            Object obj = input.readObject();
            System.out.println(obj);
        }
        return "success";
    }
}
